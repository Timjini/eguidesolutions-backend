<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Audio Chat</title>
</head>

<body>
    <h1>Audio Chat</h1>
    <button id="startButton">Start Audio Chat</button>

    <script>
     const startButton = document.getElementById('startButton');
        let localStream;
        let peerConnection;

        startButton.addEventListener('click', async () => {
            try {
                // Get local audio stream
                localStream = await navigator.mediaDevices.getUserMedia({ audio: true });
                console.log(localStream);

                // Mute the local audio track
                localStream.getAudioTracks().forEach(track => {
                    track.enabled = false;
                });

                // Initialize RTCPeerConnection
                peerConnection = new RTCPeerConnection();

                // Add the muted local audio stream to the peer connection
                localStream.getTracks().forEach(track => peerConnection.addTrack(track, localStream));

                // Handle incoming audio stream from the remote peer
                peerConnection.ontrack = event => {
                    const remoteAudio = new Audio();
                    remoteAudio.srcObject = event.streams[0];
                    remoteAudio.play();
                };

                // Create an offer and set it as the local description
                const offer = await peerConnection.createOffer();
                await peerConnection.setLocalDescription(offer);

                // Send the offer to the other peer (you'll need to implement this part)
                // For example, send the offer via WebSocket to the other peer

                console.log('iceConnectionState:', peerConnection.iceConnectionState);
                console.log('connectionState:', peerConnection.connectionState);
                console.log('signalingState:', peerConnection.signalingState);


            } catch (error) {
                console.error('Error accessing microphone:', error);
            }
        });

    </script>
</body>

</html>